{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerem\\\\Desktop\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { response } from \"msw\";\nimport { useContext } from \"react\";\nimport { useEffect, useState, useReducer } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  element: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ELEMENT':\n      return { ...state,\n        element: action.payload\n      };\n\n    case 'THEME':\n      return { ...state,\n        theme: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  //const [favs, setFavs] = useState([]);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    async function fetchDataAsync() {\n      const response = await fetch('https://jsonplaceholder.typicode.com/users%27');\n      const info = await response.json();\n      dispatch({\n        type: 'ELEMENT',\n        payload: info\n      });\n    }\n\n    fetchDataAsync();\n  }, []); //const handleThemeChange = () => {\n  //  dispatch({ type: 'SET_THEME', payload: state.theme === 'dark' ? '' : 'dark' });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      state\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["response","useContext","useEffect","useState","useReducer","createContext","initialState","theme","element","ContextGlobal","undefined","reducer","state","action","type","payload","ContextProvider","children","dispatch","fetchDataAsync","fetch","info","json","useContextGlobal"],"sources":["C:/Users/jerem/Desktop/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { response } from \"msw\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect , useState, useReducer } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\n\r\nexport const initialState = {theme: \"\", element: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ELEMENT':\r\n      return { ...state, element: action.payload };\r\n    case 'THEME':\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  //const [favs, setFavs] = useState([]);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n \r\n  useEffect(() => {\r\n    async function fetchDataAsync() {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/users%27');\r\n      const info = await response.json();\r\n      dispatch({ type: 'ELEMENT', payload: info });\r\n    }\r\n    fetchDataAsync();\r\n  }, []);\r\n\r\n  //const handleThemeChange = () => {\r\n  //  dispatch({ type: 'SET_THEME', payload: state.theme === 'dark' ? '' : 'dark' });\r\n  // };\r\n\r\n\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{state}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport const useContextGlobal = () => useContext(ContextGlobal);"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,KAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,EAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAGA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,OAAO,EAAE;AAArB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,CAACK,SAAD,CAAnC;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,SAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYJ,OAAO,EAAEK,MAAM,CAACE;MAA5B,CAAP;;IACF,KAAK,OAAL;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYL,KAAK,EAAEM,MAAM,CAACE;MAA1B,CAAP;;IACF;MACE,OAAOH,KAAP;EANJ;AAQD,CATD;;AAeA,OAAO,MAAMI,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA;EACA,MAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBd,UAAU,CAACO,OAAD,EAAUL,YAAV,CAApC;EAGAJ,SAAS,CAAC,MAAM;IACd,eAAeiB,cAAf,GAAgC;MAC9B,MAAMnB,QAAQ,GAAG,MAAMoB,KAAK,CAAC,+CAAD,CAA5B;MACA,MAAMC,IAAI,GAAG,MAAMrB,QAAQ,CAACsB,IAAT,EAAnB;MACAJ,QAAQ,CAAC;QAAEJ,IAAI,EAAE,SAAR;QAAmBC,OAAO,EAAEM;MAA5B,CAAD,CAAR;IACD;;IACDF,cAAc;EACf,CAPQ,EAON,EAPM,CAAT,CAP+C,CAgB/C;EACA;EACA;;EAIA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACP;IAAD,CAA/B;IAAA,UACGK;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA3BM;;GAAMD,e;;KAAAA,e;AA6Bb,OAAO,MAAMO,gBAAgB,GAAG;EAAA;;EAAA,OAAMtB,UAAU,CAACQ,aAAD,CAAhB;AAAA,CAAzB;;IAAMc,gB"},"metadata":{},"sourceType":"module"}